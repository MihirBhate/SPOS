[3:57 pm, 15/11/2023] Aditya Bhise: DLL java: 
import java.io.*;

import java.util.*;

class B1 {

 

     static {

         System.loadLibrary("b1");

     }



     private native int add(int a, int b);
     
     
     public static void main(String[] args) {

	Scanner sc=new Scanner(System.in);

	int a, b,ch;

	System.out.println("\nEnter value of a : ");

	a = sc.nextInt();

	System.out.println("\nEnter value of b : ");

	b = sc.nextInt();

	do

	{

		System.out.println("\nENTER YOUR CHOICE : ");

		ch = sc.nextInt();

		

		switch(ch)

		{

			case 1 : new B1().add(a,b);

				 break;




			default : System.out.println("Your choice is wrong.");

		}

	}while(ch<2);

     }

 }

DLL cpp: 

#include <jni.h>
#include <iostream>
#include "B1.h"

using namespace std;

JNIEXPORT jint JNICALL Java_B1_add(JNIEnv *env, jobject obj, jint a, jint b) {
    jint result = a + b;
    cout << a << " + " << b << " = " << result << endl;
    return result;
}

1.Compile c++ code:
# Compile the C++ code and create a shared library (DLL/SO file)
g++ -shared -fPIC -o libb1.so B1.cpp -I${JAVA_HOME}/include -I${JAVA_HOME}/include/linux

2.Run java code:
# Compile the Java code
javac B1.java

# Run the Java program
java -Djava.library.path=. B1


sudo update-alternatives --config java
sudo update-alternatives --config javac
Replace "/path/to/your/jdk" with the actual path to your JDK installation.
